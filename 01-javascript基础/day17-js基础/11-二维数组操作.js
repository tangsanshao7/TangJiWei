// 现有二维数组，var  array=[[1,2,8,9],[2,4,9,12],[4,7,10,13],[6,8,11,15]];
//    1. 遍历打印二维数组的所有元素
//    2. 计算二维数组中所有元素的和
//    3. 求二维数组中所有元素的最大值。

// 步骤
// 1. 声明一个变量 保存二维数组
var arr = [[1, 2, 8, 9], [2, 4, 9, 12], [4, 7, 10, 13], [6, 8, 11, 15]];
// 2. 声明一个变量 保存和
var sum = 0;
// 3. 假设一个最大值
var max = arr[0][0];
// 4. 循环遍历二维数组  外层循环是遍历二维数组中的数组
for (var i = 0; i < arr.length; i++) {
// 4.1 内层循环是遍历二维数组中的数组的值
    for (var j = 0; j < arr[i].length; j++) {
        // 4.1.2  判断如果二维数组的某个值大于最大值 
        if (arr[i][j] > max) {
            // 4.1.3 就让最大值等于二维数组的某个值
            max = arr[i][j];
        }

        // 4.1.4 循环遍历二维数组的所有元素
        console.log(arr[i][j])
        // 4.1.5 累加
        sum += arr[i][j];

    }
}
console.log("和是:" + sum + ",最大值是:" + max);
